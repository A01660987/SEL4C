# Generated by Django 4.2.5 on 2023-10-19 21:01

import SEL4C.permissions
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_number', models.PositiveSmallIntegerField(verbose_name='Número de actividad')),
            ],
            options={
                'verbose_name': 'Actividad',
                'verbose_name_plural': 'Actividades',
                'ordering': ['activity_number'],
            },
        ),
        migrations.CreateModel(
            name='ActivityText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Título')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='País')),
            ],
            options={
                'verbose_name': 'Título de actividad',
                'verbose_name_plural': 'Títulos de actividad',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='AnswerRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
            ],
            options={
                'verbose_name': 'Valuación',
                'verbose_name_plural': 'Valuaciones',
            },
        ),
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Respuesta')),
            ],
            options={
                'verbose_name': 'Texto de respuesta',
                'verbose_name_plural': 'Textos de respuesta',
            },
        ),
        migrations.CreateModel(
            name='AnswerUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(verbose_name='Link al archivo')),
                ('filename', models.TextField(verbose_name='Nombre del archivo')),
            ],
            options={
                'verbose_name': 'Carga de archivo',
                'verbose_name_plural': 'Cargas de archivo',
            },
        ),
        migrations.CreateModel(
            name='AvailableStudies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'AvailableStudies',
                'verbose_name_plural': 'AvailableStudies',
                'ordering': ['institution'],
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('L', 'Licenciatura'), ('M', 'Maestría'), ('D', 'Doctorado')], max_length=1, verbose_name='Tipo')),
                ('name', models.CharField(max_length=100, verbose_name='Título')),
            ],
            options={
                'verbose_name': 'Título académico',
                'verbose_name_plural': 'Títulos académicos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Disciplina')),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Institución')),
            ],
            options={
                'verbose_name': 'Institución',
                'verbose_name_plural': 'Instituciones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('name', models.CharField(max_length=150, verbose_name='Nombre(s)')),
                ('first_lastname', models.CharField(max_length=150, verbose_name='Apellido paterno')),
                ('second_lastname', models.CharField(max_length=150, verbose_name='Apellido materno')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(130)], verbose_name='Edad')),
                ('agreed_policies', models.BooleanField(default=True, validators=[SEL4C.permissions.is_agreed_on_policy], verbose_name='¿Acepta las políticas de privacidad?')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('N', 'No binario'), ('O', 'Otro'), ('P', 'Prefiero no decir')], max_length=1, verbose_name='Género')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='País')),
                ('studies', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.availablestudies', verbose_name='Studies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exerciseStep_number', models.PositiveSmallIntegerField(verbose_name='Número de ejercicio')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.activity', verbose_name='Actividad')),
            ],
            options={
                'verbose_name': 'Ejercicio',
                'verbose_name_plural': 'Ejercicios',
                'ordering': ['exerciseStep_number'],
            },
        ),
        migrations.AddField(
            model_name='availablestudies',
            name='degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.degree', verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='availablestudies',
            name='discipline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.discipline', verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='availablestudies',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.institution', verbose_name='Institution'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('U', 'Carga'), ('T', 'Texto'), ('R', 'Valuación')], max_length=1, verbose_name='Tipo')),
                ('submitted', models.DateTimeField(auto_now=True, verbose_name='Fecha de envío')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.activity', verbose_name='Actividad')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.exercisestep', verbose_name='Ejercicio')),
                ('rating_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.answerrating', verbose_name='Valuación')),
                ('text_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.answertext', verbose_name='Texto')),
                ('upload_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.answerupload', verbose_name='Carga')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Respuesta',
                'verbose_name_plural': 'Respuestas',
                'ordering': ['submitted'],
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_text',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SEL4C.activitytext', verbose_name='Texto de actividad'),
        ),
    ]
