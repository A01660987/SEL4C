# Generated by Django 4.2.4 on 2023-09-28 16:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('SEL4C', '0003_student_academicdisciplines_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('identificator', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('denomination', models.CharField(max_length=50, unique=True, verbose_name='Competence')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Competence',
                'verbose_name_plural': 'Competences',
                'db_table': 'competence',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosisQuestion',
            fields=[
                ('identificator', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('question', models.TextField(unique=True, verbose_name='Question')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Diagnosis Question',
                'verbose_name_plural': 'Diagnosis Questions',
                'db_table': 'diagnosisquestion',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='ImplementationProcess',
            fields=[
                ('identificator', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('student', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.student', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Implementation Process',
                'verbose_name_plural': 'Implementation Processes',
                'db_table': 'implementationprocess',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('identificator', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('denomination', models.CharField(max_length=25, unique=True, verbose_name='Resource')),
                ('link', models.TextField(unique=True, verbose_name='Link')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'resource',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='TrainingReagent',
            fields=[
                ('identificator', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('denomination', models.CharField(max_length=50, unique=True, verbose_name='Training Reagent')),
                ('goals', models.TextField(null=True, verbose_name='Goals')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('indications', models.TextField(null=True, verbose_name='Indications')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('competences', models.ManyToManyField(to='SEL4C.competence')),
                ('resources', models.ManyToManyField(to='SEL4C.resource')),
            ],
            options={
                'verbose_name': 'Training Reagent',
                'verbose_name_plural': 'Training Reagents',
                'db_table': 'trainingreagent',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('identificator', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('denomination', models.CharField(max_length=25, unique=True, verbose_name='Test')),
                ('description', models.CharField(max_length=50, null=True, verbose_name='Description')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('diagnosisQuestions', models.ManyToManyField(to='SEL4C.diagnosisquestion')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Tests',
                'db_table': 'test',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceDiagnosis',
            fields=[
                ('identificator', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('completed', models.BooleanField(default=True, verbose_name='Completed')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('implementationProcess', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.implementationprocess', verbose_name='Implementation Process')),
            ],
            options={
                'verbose_name': 'Competence Diagnosis',
                'verbose_name_plural': 'Competence Diagnoses',
                'db_table': 'competencediagnosis',
                'ordering': ['identificator'],
            },
        ),
        migrations.CreateModel(
            name='TrainingActivity',
            fields=[
                ('identificator', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('link', models.TextField(editable=False, null=True, verbose_name='Link')),
                ('completed', models.BooleanField(default=True, verbose_name='Completed')),
                ('registered', models.DateTimeField(auto_now_add=True, verbose_name='Registered')),
                ('implementationProcess', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.implementationprocess', verbose_name='Implementation Process')),
                ('trainingReagent', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.trainingreagent', verbose_name='Training Reagent')),
            ],
            options={
                'verbose_name': 'Training Activity',
                'verbose_name_plural': 'Training Activities',
                'db_table': 'trainingactivity',
                'ordering': ['identificator'],
                'unique_together': {('trainingReagent', 'implementationProcess')},
            },
        ),
        migrations.CreateModel(
            name='DiagnosisTest',
            fields=[
                ('identificator', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('answer', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='Answer')),
                ('competenceDiagnosis', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.competencediagnosis', verbose_name='Competence Diagnosis')),
                ('diagnosisQuestion', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='SEL4C.diagnosisquestion', verbose_name='Diagnosis Question')),
            ],
            options={
                'verbose_name': 'Diagnosis Test',
                'verbose_name_plural': 'DiagnosisTests',
                'db_table': 'diagnosistest',
                'ordering': ['identificator'],
                'unique_together': {('competenceDiagnosis', 'diagnosisQuestion')},
            },
        ),
    ]
